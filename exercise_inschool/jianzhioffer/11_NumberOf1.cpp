//输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示
//计算机中没有减法运算，减法运算是变成补码后进行加法运算。移位操作也是先变成补码在进行移位操作。 
//所以求1的个数也是求的是补码1的个数。对于负数补码来说，向右边移动的时候，最高位补的是1，这样才能和源码对应，
//所以最后补码全是1的时候，对应的数字为-1，所以负数向右移动最后为-1。（另外说下，负数的补码表示方法比正数多一个）
//也就是10000000，这个对应的是-128，没有对应的源码，如果用源码表示正数负数一样多。 
 #include<iostream>
 using namespace std;
 #include<stdio.h>
 int  NumberOf1(int n) {
 	int cnt=0;
	while(n){
	 cnt++;
	 n=(n-1)&n;
	}
	return cnt;
 }
 main(){
 	int n=-1;
 	cout<<(n>>4)<<endl;
 	cout<<NumberOf1(n)<<endl;
 }
